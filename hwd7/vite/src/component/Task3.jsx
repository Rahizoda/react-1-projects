import React, { useState } from 'react';

const questions = [
  {
    question: "–ü–æ–π—Ç–∞—Ö—Ç–∏ –¢–æ“∑–∏–∫–∏—Å—Ç–æ–Ω —á–∏—Å—Ç?",
    options: ["–•—É“∑–∞–Ω–¥", "–ö”Ø–ª–æ–±", "–î—É—à–∞–Ω–±–µ", "–ë–æ—Ö—Ç–∞—Ä"],
    answer: "–î—É—à–∞–Ω–±–µ"
  },
  {
    question: "2 + 2 —á–∞–Ω–¥ –º–µ—à–∞–≤–∞–¥?",
    options: ["3", "4", "5", "6"],
    answer: "4"
  },
  {
    question: "–†–∞–Ω–≥–∏ –ø–∞—Ä—á–∞–º–∏ –¢–æ“∑–∏–∫–∏—Å—Ç–æ–Ω –∫–∞–¥–æ–º“≥–æ—è–Ω–¥?",
    options: ["–°—É—Ä—Ö, —Å–∞—Ñ–µ–¥, —Å–∞–±–∑", "–°—É—Ä—Ö, –∫–∞–±—É–¥, –∑–∞—Ä–¥", "–°–∏—ë“≥, —Å–∞—Ñ–µ–¥, —Å—É—Ä—Ö", "–ó–∞—Ä–¥, –∫–∞–±—É–¥, —Å–∞–±–∑"],
    answer: "–°—É—Ä—Ö, —Å–∞—Ñ–µ–¥, —Å–∞–±–∑"
  }
];

function Task3() {
  const [currentQ, setCurrentQ] = useState(0);
  const [selected, setSelected] = useState('');
  const [showResult, setShowResult] = useState(false);

  const handleOptionClick = (option) => {
    setSelected(option);
    setShowResult(true);
  };

  const handleNext = () => {
    setCurrentQ(prev => prev + 1);
    setSelected('');
    setShowResult(false);
  };

  const current = questions[currentQ];

  return (
    <div style={{ padding: "20px", maxWidth: "500px", margin: "0 auto" }}>
      <h2>–°–∞–≤–æ–ª {currentQ + 1} –∞–∑ {questions.length}</h2>
      <p><strong>{current.question}</strong></p>

      {current.options.map((option, idx) => (
        <button
          key={idx}
          onClick={() => handleOptionClick(option)}
          style={{
            display: "block",
            margin: "10px 0",
            padding: "10px",
            backgroundColor: selected === option
              ? (option === current.answer ? "lightgreen" : "salmon")
              : "white"
          }}
          disabled={showResult}
        >
          {option}
        </button>
      ))}

      {showResult && (
        <p>
          {selected === current.answer
            ? "‚úÖ “∂–∞–≤–æ–±–∏ –¥—É—Ä—É—Å—Ç!"
            : `‚ùå –ù–æ–¥—É—Ä—É—Å—Ç! “∂–∞–≤–æ–±–∏ –¥—É—Ä—É—Å—Ç: ${current.answer}`}
        </p>
      )}

      {currentQ < questions.length - 1 ? (
        <button onClick={handleNext} disabled={!showResult}>
          üëâ –°–∞–≤–æ–ª–∏ –Ω–∞–≤–±–∞—Ç”£
        </button>
      ) : (
        showResult && <p>üéâ –¢–µ—Å—Ç –±–∞ –æ—Ö–∏—Ä —Ä–∞—Å–∏–¥!</p>
      )}
    </div>
  );
}

export default Task3;
